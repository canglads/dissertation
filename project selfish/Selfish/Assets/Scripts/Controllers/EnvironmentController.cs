using UnityEngine;
using System.Collections;

public class EnvironmentController : MonoBehaviour {

	public GameObject environment;
	public GameObject mudTile;
	public GameObject rootTile;
	public GameObject rootBorderTopTopRightRight;
	public GameObject rootBorderTopRightRight;
	public GameObject rootBorderTopTopRight;
	public GameObject rootBorderTopRight;
	public GameObject rootBorderJoinSides;
	public GameObject rootBorderJoinTopBottom;
	public GameObject rootBorderJoinLeft;
	public GameObject rootBorderJoinRight;
	public Color filter = new Color (255,255,255,255);

	GameObject[] tiles;
	int[,,] grid = new int[,,] {
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{1,0,180},{1,0,180},{8,0,180},{8,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{1,0,180},{1,0,180},{8,0,180},{8,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{1,0,180},{1,0,180},{8,0,180},{8,180,180},{1,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{1,0,180},{2,0,180},{7,0,180},{7,180,180},{2,180,180},{1,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{1,0,180},{2,0,180},{5,0,180},{0,0,0},{0,0,0},{5,180,180},{2,180,180},{1,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{2,0,180},{5,0,180},{0,0,180},{0,0,0},{0,0,0},{0,0,0},{5,180,180},{2,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{3,0,180},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{3,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{1,0,180},{3,0,180},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{3,180,180},{1,180,180},{1,180,180},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{1,0,180},{1,0,180},{2,0,180},{5,0,180},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{5,180,180},{2,180,180},{1,180,180},{1,180,180},{-1,0,0}},
		{{1,0,180},{1,0,180},{1,0,180},{1,0,180},{3,0,180},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{3,180,180},{1,180,180},{1,180,180},{1,180,180}},
		{{1,0,180},{1,0,180},{1,0,180},{2,0,180},{5,0,180},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{3,180,180},{1,180,180},{1,180,180},{1,180,180}},
		{{9,0,180},{9,0,180},{9,0,180},{6,0,180},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{6,180,180},{9,180,180},{9,180,180},{9,180,180}},
		{{1,0,90},{2,0,90},{8,0,90},{8,0,90},{5,0,90},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{5,180,90},{8,180,90},{2,180,90},{1,180,90}},
		{{1,0,90},{1,0,90},{1,0,90},{1,0,90},{2,0,90},{5,0,90},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{5,180,90},{2,180,90},{1,180,90},{1,180,90},{1,180,90}},
		{{1,0,90},{1,0,90},{1,0,90},{1,0,90},{1,0,90},{4,0,90},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{4,180,90},{1,180,90},{1,180,90},{1,180,90},{1,180,90}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{4,0,90},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{4,180,90},{1,180,90},{1,180,90},{1,180,90},{1,180,90}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{2,0,90},{3,0,90},{5,0,90},{0,0,0},{0,0,0},{0,0,0},{5,180,90},{2,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{1,0,90},{4,0,90},{0,0,0},{0,0,0},{5,180,90},{2,180,90},{1,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{1,0,90},{2,0,90},{7,0,90},{7,180,90},{2,180,90},{1,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{1,0,90},{9,0,90},{9,180,90},{1,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{1,0,90},{9,0,90},{9,180,90},{1,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{9,0,90},{9,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}},
		{{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{1,0,90},{1,0,90},{9,0,90},{9,180,90},{1,180,90},{1,180,90},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0},{-1,0,0}}
	};
	
	// attach to GameObject at the bottom left of the area
	void Awake ()
	{
		tiles = new GameObject[] {mudTile, rootTile, rootBorderTopTopRightRight, rootBorderTopRightRight, rootBorderTopTopRight, rootBorderTopRight, rootBorderJoinSides, rootBorderJoinTopBottom, rootBorderJoinLeft, rootBorderJoinRight};
		Vector3 tileSize = mudTile.GetComponent<SpriteRenderer> ().bounds.size;
		for (int i = 0; i < grid.GetLength(1); i++) {
			for (int j = 0; j < grid.GetLength(0); j++) {
				if (grid[j,i,0] != -1) {
					Vector3 position = new Vector3 (transform.position.x + tileSize.x * i, transform.position.y + tileSize.y * j, 0f);
					GameObject tile = Instantiate(tiles[grid[j,i,0]], position, Quaternion.Euler(new Vector3(0f, grid[j,i,1], grid[j,i,2]))) as GameObject;
					tile.GetComponent<SpriteRenderer>().color = filter;
					tile.transform.SetParent(environment.transform);
				}
			}
		}
	}

}
